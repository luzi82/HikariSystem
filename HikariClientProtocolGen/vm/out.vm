package com.luzi82.hikari.client.protocol;

import java.util.concurrent.Future;
import java.util.List;
import com.luzi82.concurrent.FutureCallback;
import com.luzi82.concurrent.RetryableFuture;
import com.luzi82.hikari.client.endpoint.HsCmdManager;
import com.luzi82.homuvalue.Value;

public class ${main}Protocol extends ${main}ProtocolDef {

	public static final String APP_NAME = "${app_name}";
#foreach( $data in $data_list )

	public static Future<List<${data.Cname}>> get${data.Cname}List(
		final HsCmdManager cmdManager,
		final FutureCallback<List<${data.Cname}>> futureCallback
	) {
		return cmdManager.getDataList(
			APP_NAME,
			"${data.Jname}",
			${data.Cname}.class,
			futureCallback
		);
	}
#end
#if( $status_exist )

	public static Value<Status> getStatusValue(
		final HsCmdManager cmdManager
	) {
		return cmdManager.getStatusValue(
			APP_NAME,
			Status.class
		);
	}
#end
#foreach( $cmd in $cmd_list )

	public static RetryableFuture<${cmd.Cname}.Result> ${cmd.Fname}(
		final HsCmdManager cmdManager,
#foreach( $req in $cmd.ReqList )
		${req.Type} ${req.Name},
#end
		final FutureCallback<${cmd.Cname}.Result> futureCallback
	) {
		final ${cmd.Cname}.Request request = new ${cmd.Cname}.Request();
#foreach( $req in $cmd.ReqList )
		request.${req.Name} = ${req.Name};
#end
		return cmdManager.sendRequest(
			APP_NAME,
			"${cmd.Jname}",
			request,
			${cmd.Cname}.Result.class,
			futureCallback
		);
	}
#end

}
